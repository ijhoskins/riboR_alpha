% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/region_count_functions.R
\name{get_region_counts}
\alias{get_region_counts}
\title{Retrieves the region counts from a .ribo file}
\usage{
get_region_counts(ribo.object, regions, range.lower, range.upper,
  length = TRUE, transcript = TRUE,
  experiments = get_experiments(ribo.object))
}
\arguments{
\item{ribo.object}{S3 "ribo" class object}

\item{regions}{Specific region of interest}

\item{range.lower}{Lower bound of the read length}

\item{range.upper}{Upper bound of the read length}

\item{length}{Option to condense the read lengths together, preserve the transcripts}

\item{transcript}{Option to condense the transcripts together, preserve the read lengths}

\item{experiments}{List of experiment names}
}
\value{
A data table of the region counts
}
\description{
\code{\link{get_region_counts}} will return the particular region counts
of any subset of regions for a given set of experiments.
}
\details{
This function will return a data.table of the counts at each specified region
for each specified experiment. The region options are "UTR5", "UTR5J", "CDS",
"UTR3J", and "UTR3". The user can specify any subset of regions in the form of a vector,
a list, or a single string if only one region is required.

The dimensions of the returned data table depend on the parameters
range.lower, range.upper, length, and transcript.

The param 'length' condenses the read lengths together.
When length is true and transcript is false, the
data table presents information for each transcript across
all of the read lengths. That is, each transcript has a value
that is the sum of all of the counts across every read length.
As a result, information about the transcript at each specific
read length is lost.

The param 'transcript' condenses the transcripts together.
When transcript is true and length.lengths is false, the data
table presents information at each read length between range.lower and
range.upper inclusive. That is, each separate read length denotes the
sum of counts from every transcript. As a result, information about the
counts of each individual transcript is lost.

If both 'length' and 'transcript' are true, then the resulting
data table prints out one row for each experiment. This provides the metagene
information across all transcripts and all reads in a given experiment. If both
'length' and 'transcript' are true, no calculations are done to the data,
all information is preserved for both the read length and the transcript.
The data table would just present the entire stored raw data
from the read length 'range.lower' to the read length 'range.upper' which in most
cases would result in a slow run time with a massive data.table returned.
}

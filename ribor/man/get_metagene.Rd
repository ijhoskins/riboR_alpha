% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metagene_functions.R
\name{get_metagene}
\alias{get_metagene}
\title{Retrieves the metagene data from a .ribo file}
\usage{
get_metagene(ribo.object, site, range.lower, range.upper, length = TRUE,
  transcript = TRUE, experiments = get_experiments(ribo.object))
}
\arguments{
\item{ribo.object}{S3 "ribo" class object}

\item{site}{"start" or "stop" site coverage}

\item{range.lower}{Lower bound of the read length, inclusive}

\item{range.upper}{Upper bound of the read length, inclusive}

\item{length}{Option to condense the read lengths together, preserving information at each transcript}

\item{transcript}{Option to condense the transcripts together, preserving information at each read length}

\item{experiments}{List of experiment names}
}
\value{
A data.table of the metagene information
}
\description{
The function \code{\link{get_metagene}} returns a data table that provides
the coverage at the positions surrounding the metagene start or stop site.
}
\details{
The dimensions of the returned data table depend on the parameters
range.lower, range.upper, length, and transcript.

The param 'length' condenses the read lengths together.
When length is true and transcript is false, the
data table presents information for each transcript across
all of the read lengths. That is, each transcript has a value
that is the sum of all of the counts across every read length.
As a result, information about the transcript at each specific
read length is lost.

The param 'transcripts' condenses the transcripts together.
When transcript is true and length.lengths is false, the data
table presents information at each read length between range.lower and
range.upper inclusive. That is, each separate read length denotes the
sum of counts from every transcript. As a result, information about the
counts of each individual transcript is lost.

If both 'length' and 'transcript' are true, then the resulting
data table prints out one row for each experiment. This provides the metagene
information across all transcripts and all reads in a given experiment. If both
'length' and 'transcript' are true, no calculations are done to the data,
all information is preserved for both the read length and the transcript.
The data table would just present the entire stored raw data
from the read length 'range.lower' to the read length 'range.upper' which in most
cases would result in a slow run time with a massive data.table returned.
}
\examples{
#generate the ribo object by loading in a ribo function and calling the \\code{\\link{ribo}} function
\dontrun{
sample <- ribo("sample.ribo")
}

#extract the total metagene information for all experiments
#across the read lengths and transcripts of the start site
#from read length 15 to 40
\dontrun{
metagene_info <- get_metagene(ribo.object = sample,
                              site = "start",
                              range.lower = 15,
                              range.upper = 40,
                              length = TRUE,
                              transcript = TRUE,
                              experiments = get_experiments(sample))
}

#Note that length, transcript, and experiments in this case are the
#default values and can be left out in this case. The following generates the same output.
\dontrun{
metagene_info <- get_metagene(ribo.object = sample,
                                 site = "start",
                                 range.lower = 15,
                                 range.upper = 40)
}

}
\seealso{
\code{\link{ribo}} to generate the necessary 'ribo' class object,
\code{\link{plot_metagene}} to visualize the metagene data,
\code{\link{get_tidy_metagene}} to obtain tidy metagene data under certain conditions
}

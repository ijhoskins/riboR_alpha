% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metagene_functions.R
\name{get_tidy_metagene}
\alias{get_tidy_metagene}
\title{Retrieves the metagene data in a tidy format}
\usage{
get_tidy_metagene(ribo.object, site, range.lower, range.upper,
  length = TRUE, experiments = get_experiments(ribo.object))
}
\arguments{
\item{ribo.object}{S3 "ribo" class object}

\item{site}{"start" or "stop" site coverage}

\item{range.lower}{Lower bound of the read length}

\item{range.upper}{Upper bound of the read length}

\item{length}{Option to condense the read lengths together}

\item{experiments}{List of experiment names}
}
\value{
A tidy data table of the metagene information
}
\description{
The function \code{\link{get_tidy_metagene}} provides the user with a tidy data format for easier
data cleaning and manipulation. In providing this functionality, the user must length the
transcripts together and is only provided the option to length the read lengths together.
}
\details{
The dimensions of the returned data table depend on the parameters
range.lower, range.upper, and length.

The param 'length' condenses the read lengths together.
When length is true, then the resulting data table prints out one row
for each experiment. This provides a tidy format of the metagene information
across all transcripts and all read lengths in a given experiment. Each row
in the data table represents the total metagene coverage count of a given experiment
at a given position.

When the param  'length' is false, then the resulting data table prints out the
metagene coverage count at each position of the metagene radius for each read length.
This provides a tidy format of the metagene information across the transcripts, preserving
the metagene coverage count at each read length.
}
\examples{
#generate the ribo object by loading in a ribo function and calling the \\code{\\link{ribo}} function
file.path <- system.file("extdata", "sample.ribo", package = "ribor")
sample <- ribo(file.path)

#extract the total metagene information in a tidy format
#for all experiments across the read lengths and transcripts
#of the start site from read length 2 to 5

metagene_info <- get_tidy_metagene(ribo.object = sample,
                                   site = "start",
                                   range.lower = 2,
                                   range.upper = 5,
                                   length = TRUE,
                                   experiments = get_experiments(sample))

#Note that length and experiments in this case are the
#default values and can be left out. The following generates the same output.
\donttest{
metagene_info <- get_tidy_metagene(ribo.object = sample,
                                   site = "start",
                                   range.lower = 2,
                                   range.upper = 5)
}

}
\seealso{
\code{\link{ribo}} to generate the necessary 'ribo' class object.
\code{\link{plot_metagene}} to visualize the metagene data,
\code{\link{get_metagene}} to obtain tidy metagene data under certain conditions
}
